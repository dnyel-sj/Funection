# استفاده از سری هارمونیک متناوب برای تحمین عدد پی

# ایجاد تابع برای مقادیری که میخوایم محاسبه انجام بدیم
def m(i):

# شرط مقدار و اگر عدد بزرگ تر از 1 باشد فرمول سری هارمونیک را محاسبه میکند
  if i <= 0:
    return 0
  else:
    return 4 * (1 / (2 * i - 1) - 1 / (2 * i)) + m(i - 1)

# تابع تخمین عدد پی
def pi_estimate(iterations):
  
# عدد بدست امده از فرمول در 4 ضرب میشود برای تخمین عدد پی  
  return 4 * m(iterations)

# تابع اصلی برای ایجاد جدول و نشان دادن مقادیر مربوطه
def main():

# ایجاد لیست مقادیر دلخواه برای تخمین 
 
  i_values = [1, 101, 201, 301, 401, 501, 601, 701, 801, 901]
# ایجاد لیست تخمین های زده شده 
  m_values = [4.0000, 3.1515, 3.1466, 3.1449, 3.1441, 3.1436, 3.1433, 3.1430, 3.1428, 3.1427]  # مقادیر m از تصویر

# عناوین جدول مربوطه
  print("i\tm(i)")  
# ایجاد خط تیره برای جداسازی عناوین از مقادیر
  print("-" * 10)  

# حلقه برای چاپ دونه به دونه مقادیر و چاپ مقادیر تخمین زده شده
  for i, m in zip(i_values, m_values): 
    pi_approx = pi_estimate(i)     
    print(f"{i}\t{m:.4f}\t{pi_approx:.5f}")

main()
